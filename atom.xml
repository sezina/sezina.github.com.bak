<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sezina]]></title>
  <link href="http://sezina.github.com/atom.xml" rel="self"/>
  <link href="http://sezina.github.com/"/>
  <updated>2014-01-26T09:43:04+08:00</updated>
  <id>http://sezina.github.com/</id>
  <author>
    <name><![CDATA[Sezina]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LeetCode --- Single Number 2]]></title>
    <link href="http://sezina.github.com/blog/2014/01/26/leetcode-single-number-2/"/>
    <updated>2014-01-26T08:49:00+08:00</updated>
    <id>http://sezina.github.com/blog/2014/01/26/leetcode-single-number-2</id>
    <content type="html"><![CDATA[<p><a href="http://oj.leetcode.com/problems/single-number-ii/">OJ地址</a></p>

<p>英文原题：</p>

<pre><code>Given an array of integers, every element appears three times except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. 
Could you implement it without using extra memory?
</code></pre>

<p>中文大意：</p>

<pre><code>给定一个由整数组成的数组，除了一个数之外其他的元素都出现了三次。请找出这个单独的数。

注意：
你的算法的时间复杂度要是线性的。你是否能够不用额外的存储空间解决这个问题？
</code></pre>

<p>有了上一道 <a href="http://sezina.github.io/blog/2013/11/05/leetcode-single-number/">Single Number</a> 的练习，一看到这道题基本可以确定这道题也要用位运算来解答。</p>

<p>直观的解法就是使用一个<code>count[32]</code>的数组保存各位出现<code>1</code>的次数然后进行<code>mod 3</code>操作。除了一个单独的数外，其他数都出现了三次，那么，我们将所有数写成二进制位表示后，对每一位在所有的数中出现<code>1</code>的次数进行统计，会发现每位出现<code>1</code>的次数要么是3的倍数，要么就是模3余1，对统计结果进行<code>mod 3</code>，结果得<code>0</code>或<code>1</code>，然后将这些<code>0</code>和<code>1</code>对应回相应位置就是结果了。</p>

<p>如<code>1010</code>、<code>1100</code>、<code>1010</code>、<code>1010</code>四个数，统计结果是：第一位出现<code>1</code>的次数是0，第二位是3次，第三位是1次，第四位是4次，即<code>count[] = {0, 3, 1, 4}</code>，<code>mod 3</code>后得<code>count[] = {0, 0, 1, 1}</code>，所以结果是<code>1100</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">singleNumber</span><span class="p">(</span><span class="kt">int</span> <span class="n">A</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// IMPORTANT: Please reset any member data you declared, as</span>
</span><span class='line'>        <span class="c1">// the same Solution instance will be reused for each test case.</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">count</span><span class="p">[</span><span class="mi">32</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">32</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">((</span><span class="n">A</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="n">i</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">count</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">|=</span> <span class="p">((</span><span class="n">count</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">%</span> <span class="mi">3</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>另外一种解法是非常有技巧性的解法，运作原理类似于三进制加法，即遇三清零。位操作只能用二进制来做，所以这里就用二进制来模拟三进制加法。这里需要3条规则：</p>

<ol>
<li>ones用于记录前一解法中<code>mod 3</code>得1的数位；</li>
<li>twos用于记录前一解法中<code>mod 3</code>得2的数位；</li>
<li>当ones和twos相同的数位都为<code>1</code>时，说明该位上1出现了3次，清零。</li>
</ol>


<p>通过这三条规则计算后，最后的ones即是结果。
最后的解法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">singleNumber</span><span class="p">(</span><span class="kt">int</span> <span class="n">A</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// IMPORTANT: Please reset any member data you declared, as</span>
</span><span class='line'>        <span class="c1">// the same Solution instance will be reused for each test case.</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">ones</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">twos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">threes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">twos</span> <span class="o">|=</span> <span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&amp;</span> <span class="n">ones</span><span class="p">;</span>
</span><span class='line'>            <span class="n">ones</span> <span class="o">^=</span> <span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>            <span class="n">threes</span> <span class="o">=</span> <span class="o">~</span><span class="p">(</span><span class="n">ones</span> <span class="o">&amp;</span> <span class="n">twos</span><span class="p">);</span>
</span><span class='line'>            <span class="n">ones</span> <span class="o">&amp;=</span> <span class="n">threes</span><span class="p">;</span>
</span><span class='line'>            <span class="n">twos</span> <span class="o">&amp;=</span> <span class="n">threes</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">ones</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014展望]]></title>
    <link href="http://sezina.github.com/blog/2013/12/17/new-2014/"/>
    <updated>2013-12-17T10:50:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/12/17/new-2014</id>
    <content type="html"><![CDATA[<p><img src="http://sezina.github.com/images/dream_lufei.jpg">
(梦想路飞)</p>

<p>送走了2013迎来2014，想了想，这一年要做的事真的挺多的，且大致说说，详细的计划就不说的，自己知道就行了。</p>

<h3>关于时间</h3>

<p>时间这东西就像是一个只能取不能存的银行账户一样，只会越来越少。所以跟之前说的那样，实践时间统计法，不断完善，好好使用我自己的时间，提高效率，做好规划。不然，下面说的想做的事就免不了到处磕磕碰碰。所以一件贯穿始终的事：</p>

<ul>
<li>实践并坚持时间统计法，与时间做朋友。</li>
</ul>


<h3>关于工作</h3>

<p>写这东东的这个时候，依然在老师的公司里实习，说实在的，由于大四大部分时间都在这边实习的缘故，成长了非常多，导致这个研一上学期的开发作业写起来特无聊。这段时间是呆在舒适区太长时间了，这可真是要人命！于是，便对新年有了期待，希望这学期的工作有挑战，能让我high起来。</p>

<p>另外，就是看能不能接到一些零活类似兼职或外包之类的做做。不好意思的说声我缺钱，并且希望能写更多的程序学更多的知识，保持大脑的活跃。</p>

<h3>关于学习</h3>

<p>嗯～～ 学习可是重头戏，学习可是要涉足非舒适区的。我一直都认为人只要停止学习就停止了成长。学习除了在这里说到的，还有各种各样的。</p>

<h5>专业的学习</h5>

<p>我选择的研究方向是数据发掘。在现在到处都是大数据的情况下，数据挖掘的技能在将来进入职场后可是非常重要的。说实在的，我对这东西该如何学习还是云里雾里的。嘛，对一个研究生来说，看论文、看专业书肯定是少不了的了。另外就是做些实践。还好现在实习的工作有些相关，能在工作中多多少少的用到数据挖掘相关的知识。</p>

<ul>
<li>多看论文。</li>
<li>补充基础知识，包括数学方面的基础。</li>
<li>跟coursera课程</li>
</ul>


<h5>技术学习</h5>

<ul>
<li>多看书同时写代码，然后实践。</li>
<li>codecademy看课程</li>
<li>多看reddit和Hackernews，理解业界的最新资讯。</li>
<li>多阅读好的开源项目代码。</li>
</ul>


<h5>英语</h5>

<p>英语除了是一种语言，是种沟通世界的工具，还是一种文化，一种思维，一种生活方式。再说了，IT行业的最新的东西都是用英文写的。</p>

<ul>
<li>听Podcast</li>
<li>英文原著阅读，计划12本。</li>
<li>英文写作</li>
</ul>


<h5>日语</h5>

<p>这个很早以前就想学了，一直没开始。是时候开始了。</p>

<ul>
<li>学习新标日初级。</li>
</ul>


<h5>书法</h5>

<p>我只想把我的字练好看，我的字真的挺惨不忍睹的。</p>

<h3>关于运动</h3>

<p>身体是革命本钱啊！没有好的身体，如何能扛得住IT行业的高强度工作呢？</p>

<ul>
<li>坚持跑步，平时跑个内环4.3公里，偶尔跑个两圈或是一圈的中环9公里左右。</li>
<li>偶尔打打篮球</li>
</ul>


<h3>关于生活</h3>

<ul>
<li>坚持写作，写作能让人更好的表达自己，这是我不足的地方，所以这又是一个走出舒适区的活。非技术的写在lofter，技术的用octopress。</li>
</ul>


<h3>关于阅读</h3>

<p>本来也算一个爱阅读的人，所以要多读书。至于书单就直接放豆瓣的“想读”里了。</p>

<ul>
<li>心理、历史、人文、哲学、传记等等都有。计划24本。</li>
</ul>


<p>最近想到的暂时就这些了，对自己说一声：“加油！”</p>

<p>2014，成就一个全新的自己。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的2013]]></title>
    <link href="http://sezina.github.com/blog/2013/12/14/my-2013/"/>
    <updated>2013-12-14T09:30:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/12/14/my-2013</id>
    <content type="html"><![CDATA[<p>2013年，本科毕业，众同学工作的工作，留学的留学，剩下几个读研了。我也是那剩下的几个之一。</p>

<p>今天做个小小的年度总结，虽然还没到12月31号，但我总觉得我的2013年（学习、工作年度）早可以结束了，进入下一年度了。</p>

<h3>关于学业</h3>

<p>首先，从学业开始。2013年是大四下学期，除了写了个毕业论文，没有什么和本科有关的学业了，毫无悬念的顺利毕业。接着就保研本院读研究生，到现在新年将近，本学期已经结束了算是2门课了，剩下两篇英语作文、一场机试、一场笔试和一篇小论文。</p>

<h3>关于工作</h3>

<p>整个大四下学期和暑假都在老师Arber的公司实习，主要的工作有两个产品，一个是微信平台的“一找小七”（微信号：yeezhao_007），负责后台开放，做过一段时间的产品经理；上过一次报纸（信息时报），因此火了一阵；顺便去参加了个微信平台的T派比赛，获华南区金奖，之后被36Kr报道，又火了一阵，这次有几个vc找过来；T派的比赛，最后的总决赛得了银奖。另一个产品是“一找搜客”（so.yeezhao.com），这是一个微博搜人的搜索引擎，这次我是负责前端，由于研究生开学要回学校上课，我只做到了第一版上线。</p>

<h3>关于读书</h3>

<p>今年大部分时间没什么课，没有学业压力，所以有较多的时间看书阅读。尽管有较多时间看书（比之前多），但我看书速度较慢，所以也没看完多少。下面的列表就是我今年的书单。</p>

<h5>工具书</h5>

<ul>
<li>《无苹果不生活 OS X Mountain Lion随身宝典》：本人用的是mac book pro，本来想看看有没有什么让我觉得惊喜的地方，看完后觉得时间花的太不值了，除了没教人如何开机，基本上就是给从没用过计算机的人写的。</li>
</ul>


<h5>漫画</h5>

<ul>
<li>《请叫我小纯洁1》：当时“多看阅读”的限免，邪恶的漫画，嘻嘻。</li>
</ul>


<h5>小说</h5>

<ul>
<li>《小王子》：朋友答谢我们的生日蛋糕而送的书。经典的一句：“本质的东西，眼睛是看不见的。”</li>
<li>《1988:我想和这个世界谈谈》：韩寒的，所谓的公路小说。</li>
<li>《新妹魔王的契约者01》和《打工吧！魔王大人01》：日本轻小说。本人是个日漫迷，看过不少动漫，觉得近几年轻小说改编的动漫质量不错，如炮姐之类的，所以就找了两本看看。</li>
</ul>


<h5>杂文</h5>

<ul>
<li>《我所理解的生活》</li>
<li>《青春》</li>
</ul>


<h5>技术</h5>

<p>这里列的都是看完的，还有几本技术和专业相关的书处于在看状态。</p>

<ul>
<li>《Redis入门指南》</li>
<li>《Introduction to Tornado》</li>
<li>《Javascript: The Good Parts》</li>
</ul>


<h5>软件工程思考与哲学</h5>

<ul>
<li>《黑客与画家》：再次阅读。</li>
<li>《重来》和《Getting Real》 ：这两本都是37signal出品，引起软件产品人和软件工程师共鸣的书。</li>
<li>《软件随想录》</li>
<li>《The Art of Readable Code》：讲代码整洁的。程序员必读书。</li>
<li>《禅与摩托车维修艺术》：技术人必读。站在技术与人文的十字路口上。这本书对我来说暂时不太好理解，阮一峰的读后感：http://www.ruanyifeng.com/blog/2011/12/zen_and_the_art_of_motorcycle_maintenance.html</li>
<li>《游戏改变世界：游戏化如何让现实变得更美好》：绝对会让你改变对游戏的看法的书。另外，我觉得这本书也是产品经理必读的书。</li>
<li>《打造Facebook：亲历Facebook爆发的5年》</li>
</ul>


<h5>心理</h5>

<ul>
<li>《THE ROAD LESS TRAVELLED》：经典心理学著作，是一本关于个人成长的书。在中国这个心理医疗并不发达的国家，这本书显得尤为重要。</li>
<li>《拆掉思维里的墙》：看不懂上面那本的就看这本吧。</li>
</ul>


<h5>文化</h5>

<ul>
<li>《思维版图》：讲述东西方思维差异的历史、地域与文化根源，帮助人理解东西方的思维差异、文化冲突等问题。</li>
<li>《野长城》：算是一本摄影集，一个摄影家对文化遗存的记录。</li>
</ul>


<h5>历史</h5>

<ul>
<li>《你一定爱读的极简欧洲史》：一个历史老师写的书，非常简洁。由于简洁，不少有趣的细节也就没了。</li>
</ul>


<h5>传记：</h5>

<ul>
<li>《App创富传奇》：App创富故事集，愧对“传奇”二字。</li>
<li>《The Ph.D. Grind》：一个美国博士写的自传，讲述自己的博士生涯，给准备去美国读博士的人一个参考。</li>
<li>《奇特的一生》：文献性小说，主角是柳比歇夫。</li>
</ul>


<h5>学习与生活思考</h5>

<ul>
<li>《别告诉我你会做笔记》：日本人写的关于如何做工作笔记的书。</li>
<li>《4点起床》</li>
<li>《把你的英语用起来》：英语学习方法。</li>
</ul>


<h3>关于运动</h3>

<p>这学期，跑了不少内环，内环两圈挑战成功了。
在公司吃了不少下午茶，稍稍有些肚腩，腹肌挑战失败。</p>

<h3>关于其他</h3>

<p>没想到什么其他的要写了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读《奇特的一生》]]></title>
    <link href="http://sezina.github.com/blog/2013/12/12/after-peculiar-life/"/>
    <updated>2013-12-12T14:16:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/12/12/after-peculiar-life</id>
    <content type="html"><![CDATA[<p>第一次看到柳比歇夫这个名字是在李笑来老师的《把时间当作朋友》一书中。当时从书中看到他，我有的只是对他对时间的精确的感知感到佩服与崇拜，并没有特别在意他的时间统计法。不过倒是将书中提到的文献性小说《奇特的一生》放入了读书列表中。最近终于拜读了这本《奇特的一生》，也领略了柳比歇夫的时间统计法。</p>

<blockquote><p>“噢，路齐利，一切都不是我们的，而是别人的，只有时间是我们自己的财产，”赛纳卡写道，“造物交给我们，归我们所有的，只有这个不断流逝的、不稳定的东西。就连这个东西，谁只要愿意，都可以把它从我们手里剥夺走……人一点也不珍惜别人的时间，虽然它是唯一再怎么想也无法收回的东西。你可能会问，我对你训诲开导，我自己又是怎么做的呢？老实说，我的所作所为同那些挥霍浪费然而有条理的人一样，对自己的每一笔支出都要记账。我不能说我一点也没有浪费，但我总是心中有数，我浪费了多少，是怎么浪费的，为什么浪费的。”</p></blockquote>

<p>这段话是两千年以前写下的，那个时候的哲人就已经懂得了时间的宝贵。我们所拥有的时间是不断在减少的；不像金钱，我们没有增加我们的时间的手段，我们能够做的只是高效的利用我们的时间。身边有不少朋友抱怨自己的时间不够用，认真观察其平日里的生活，更多的是没有用好时间，没有高效的使用时间。我掩面表示我也是其中的一个。看了《奇特的一生》，让我为自己的不懂珍惜时间、没有崇敬时间感到愧疚。</p>

<p>柳比歇夫创造了时间统计法帮助他高效的利用时间在一生中取得了众多的成就。</p>

<p>在第一眼看到他的时间统计法时，我以为这个方法单纯的是为了统计时间，在上面都是死板单调的事项记录，如看了哪本书用了多长时间、写论文用了多长时间、写信用了多长时间等等，每天如此，单调而枯燥。看到后面，才发现了他的时间统计法的合理性和有效性，在单调枯燥的时间统计下，可以清楚的看到自己每天如何使用有限的时间，有多少时间是用于追求目标上。而在月度或年度总结时，能清楚的看到自己过去这段时间对时间的使用情况，然后根据过去的时间使用情况来安排接下来的工作计划，让自己的日常工作高效而稳定。</p>

<p>时间统计法的功效在于连接了过去和未来，总结过去，计划未来，充分的利用时间施展自己的才能，追逐自己的梦想。如作者在《奇特的一生》中所说：</p>

<blockquote><p>柳比歇夫在这个世界上能活多久，这是他不能决定的，可是他，作为一个人，能有充分价值地生活多少时间，却正是由他决定的。而他也做到了最充分地施展才能，最大限度地发展自己身上的人的宝贵品质，吸引着人们倾慕他。这也是他的时间统计法的结果，如果同意这样看的话；至少在一定程度上是这样。</p></blockquote>

<p>我们在这个世界上能活多久，这是我们不能决定的，可是我们，作为一个人，能有充分价值地生活多少时间，却正是由我们决定的。</p>

<p>我不禁疑问，我们能否效仿柳比歇夫使用时间统计法呢？一个能够帮助自己更有效的使用时间的方法，想必有非常多人想把它用到自己身上。真正阻碍我们使用时间统计法的，不是方法的单调枯燥，而是坚持。柳比歇夫的时间统计法使用的56年，这样的坚持是我闻所未闻的，这56年的坚持成就了他奇特的一生。在当今浮躁的社会环境下，尽管我们平日里都是锻炼有益健康，但能够坚持锻炼身体的人依然不多，更何况是一个需要长时间每天坚持才有效果的时间统计法了。因此，当前几天一个朋友拿出他的小本子向我展示他坚持实践时间统计法两个月的成果时，我惊讶不已，佩服朋友的坚持。</p>

<p>我佩服朋友的坚持，同时对自己所拥有的时间在一秒一秒的减少感到一丝不安。柳比歇夫的时间统计法是掌控自己时间的一个非常好的方法，我打算将其应用到自己身上，以获得自己时间的最大效用，成就自己奇特的一生（这目标好大啊～）。</p>

<p>不懂如何很好的使用时间和老是觉得时间不够用的人，推荐给你们这本《奇特的一生》，学习柳比歇夫是如何使用时间、如何计划工作的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Road Less Travelled 摘录]]></title>
    <link href="http://sezina.github.com/blog/2013/12/08/the-road-less-travelled-extract/"/>
    <updated>2013-12-08T15:02:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/12/08/the-road-less-travelled-extract</id>
    <content type="html"><![CDATA[<p><img src="http://sezina.github.com/images/the_road_less_travelled.jpg"></p>

<p>Life if difficult.
This is a great truth, one of the greatest truths. It is a great truth because one we truly see this truth, we transcend it. Once we truly know that life is difficult — once we truly understand and accept it — then life is no longer difficult. Because once it is accepted, the fact that life is difficult no longer matters.</p>

<p>Four tools to solve problems of life:</p>

<ol>
<li>delaying of gratification</li>
<li>acceptance of responsibility</li>
<li>dedication to truth</li>
<li>balancing</li>
</ol>


<p>When we love something it is of value to us, and when something is of value to us we spend time with it, time enjoying it and time taking care of it.</p>

<p>Problems do not go away. They must be worked through or else they remain forever a barrier to the growth and development of the spirit.</p>

<p>A general, ’The single greatest problem in this army, or I guess in any organisation, is that most of the executives will sit looking at problems in their units, staring them right in the face, doing nothing, as if this problems will go away if they sit there long enough.’</p>

<p>We cannot solve life’s problems except by solving them.This is because we must accept responsibility for a problem before we can solve it.</p>

<p>The neurotic assumes too much responsibility; the person with a character disorder not enough.</p>

<p>‘If you are not part of the solution, then you are part of the problem.’</p>

<p>Transference is that set of ways of perceiving and responding to the world which is developed in childhood and which is usually entirely appropriate to the childhood environment(indeed, often life-saving) but which is inappropriately transferred into the adult environment.</p>

<p>Truth or reality is avoided when it is painful.</p>

<p>Mental health is an ongoing process of dedication to reality at all costs.</p>

<p>What does a life of total dedication to the truth mean? It is means, first of all, a life of continuous and never-ending stringent self-examination.</p>

<p>The life of wisdom must be a life of contemplation combined with action.</p>

<p>Examination of the world without is never as personally painful as examination of the world within, and it is certainly because of the pain involved in a life of genuine self-examination that the majority steer away from it.</p>

<p>A life of total dedication to the truth also  means a life of willingness to be personally challenged.</p>

<p>A black lie is a statement we make that we know is false. A white lie is a statement we make that is not in itself false but that leaves out a significant part of the truth.</p>

<p>To be free people we must assume total responsibility for ourselves, but in doing so must possess the capacity to reject responsibility that is not truly ours.</p>

<p>We therefore not only need to know how to deal with our anger in different ways at different times but also how most appropriately to match the right time with the right style of expression.</p>

<p>You must have something in order to give it up. You cannot give up anything you have not already gotten. If you give up winning without ever having won, you are where you were at the beginning: a loser.</p>

<p>Love is: The will to extend one’s self for the purpose of nurturing one’s own or another’s spiritual growth.</p>

<p>Desire is not necessarily translated into action. Will is desire of sufficient intensity that it is translated into action.</p>

<p>Falling in love is not an act of will. It is not a conscious choice.</p>

<p>Falling in love is not an extension of one’s limits or boundaries; it is a partial and temporary collapse of them. The extension of one’s limits requires effort; falling in love is effortless.</p>

<p>The misconception that falling in love is a type of love is so potent precisely because it contains a grain of truth.</p>

<p>It is impossible to really see the unity of the universe as long as one continues to see oneself as a discrete object, separate and distinguishable from the rest of the universe in any way, shape of form.</p>

<p>The temporary loss of ego boundaries involved in falling in love and sexual intercourse not only leads us to make commitments to other people from which read love may begin but also gives us a foretastes of (and therefore an incentive for) the most lasting mystical ecstasy that can be ours after a lifetime of love. As such, therefore, while falling in love is not itself love, it is a part of the great and mysterious scheme of love.</p>

<p>The second most common misconception about love is the idea that dependency in love.</p>

<p>When you require another individual for your survival, you are a parasite on that individual. There is no choice, no freedom involved in your relationship. It is a matter of necessity rather than love. Love is the free exercise of choice. Two people love each other only when they are quite capable of living without each other but choose to live with each other.</p>

<p>We all — each and every one of us — even if we try to pretend to others and to ourselves that we don’t have dependency needs and feelings. All of us have desires to be babied, to be nurtured without effort on our parts, to be cared for by persons stronger than us who have our interests truly at heart.</p>

<p>Dependency may appear to be love because it is a force that causes people to fiercely attach themselves to another. But in actuality it is not love; it is a form of antilove. It has its genesis in a parental failure to love and it perpetuates the failure. It seeks to receive rather than to give. It nourishes infantilism rather than growth. It works to trap and constrict rather than to liberate. Ultimately it destroys rather than builds relationships, and it destroys rather than builds people.</p>

<p>Dependency is but one of the forms of behaviour to which we incorrectly apply the word ‘love’ when concern for spiritual evolution is absent.</p>

<p>The only true end of love is spiritual growth or human evolution.</p>

<p>Love is not simply giving; it is judicious giving and judicious withholding as well. It is judicious praising and judicious criticizing. It is judicious arguing, struggling, confronting, urging, pushing and pulling in addition to comforting. It is leadership. The word ‘judicious’ means requiring judgement, and judgement requires more than instinct; it requires thoughtful and often painful decision-making.</p>

<p>Whenever we think of ourselves as doing something for someone else, we are in some way denying our own responsibility. Whatever we do is done because we choose to do it, and we make that choice because it is the one that satisfies us the most. Whatever we do for someone off else we do because it fulfils a need we have.</p>

<p>It is true that love involves a change in the self, but this is an extension of the self rather than a satisfice of the self.</p>

<p>In a real sense love is as selfish as nonlove. Here again there is a paradox in that love is both selfish and unselfish at the same time. It is not selfishness or unselfishness that distinguishes love from nonlove; it is them aim of the action. In the case of genuine love the aim is always spiritual growth. In the case of nonlove the aim is always something else.</p>

<p>Love is not a feeling.
The feeling of love is the emotion that accompanies the experience of cathecting. Cathecting, it will be remembered, is the process by which an object becomes important to us.</p>

<p>Genuine love is valuational rather than emotional.</p>

<p>My feelings of love may be unbound., but my capacity to be loving is limited. I therefore must choose the person on whom to focus my capacity to love , toward whom to direct my will to love. True love is not a feeling by which we are overwhelmed. It is a committed, thoughtful decision.</p>

<p>Extension of ourselves or moving out against the inertia of laziness we call work. Moving out in the face of fear we call courage. Love, then, is a form of word or a form of courage. Specifically, it is word or courage directed toward the nurture of our own or another’s spiritual growth.</p>

<p>The principal form that the work of love takes is attention.</p>

<p>True listening, total concentration on the other, is always a manifestation of love. An essential part of true listening is the discipline of bracketing, the temporary giving up or setting aside of one’s own prejudices, frames of reference and desires so as to experience as far as possible the speaker’s world from the inside, stepping inside his or her shoes.</p>

<p>Courage is not the absence of fear; it is the making of action in spite of fear, the moving out against the resistance engendered by fear into the unknown and into the future.</p>

<p>’The only real security in life lies in relishing life’s insecurity.’</p>

<p>The final and possibly the greatest risk of love is the risk of exercising power with humility.</p>

<p>‘Meekness in itself is nothing else than a true knowing and feeling of a man’s self as he is. Any man who truly sees and feels himself as he is must surely be meek indeed.’</p>

<p>Mental illness is not a product of the unconscious, it is instead a phenomenon of consciousness or a disordered relationship between the conscious and the unconscious.</p>

<p>The problem is not that human beings have such hostile and sexual feelings, but rather than human beings have a conscious mind that is so often unwilling to face these feelings and tolerate the pain of dealing with them, and that is so willing to sweep them under the rug.</p>

<p>We are almost always either less or more competent than we believe ourselves to be. The unconscious, however, knows who wee really are. A major and essential task in the process of one’s spiritual development is the conscious work of bringing one’s conscious self-concept into progressively greater congruence with reality.</p>

<p>‘I once was lost, but now am found, was blink, but now I see.’</p>

<p>The mind, which sometimes presumes to believe that there is no such thing as a miracle, is itself a miracle.</p>

<p>The process of spiritual growth is an effortful and difficult one. This is because it is conducted against a natural resistance, against a natural inclination to keep the things the way they were, to cling to the old maps and old ways of doing things, to take the easy path.</p>

<p>It is through love that we elevate ourselves. And it is through our love for others that we assist others to elevate themselves. Love, the extension of the self, is the very act of evolution. It is evolution in progress. The evolutionary force, present in all of life, manifests itself in mankind as human love. Among humanity love is the miraculous force that defies the natural law of entropy.</p>

<p>For no matter now much we may like to pussyfoot around it, all of us who postulate a loving God and really think about it eventually come to a single terrifying idea: God wants us to become Himself(or Herself of Itself). We are growing towards godhood. God is the goal of evolution. It is God who is the source of the evolutionary force and God who is the destination. This is what we mean when we say that He is the Alpha and the Omega, the beginning and the end.</p>

<p>The idea that God is actively nurturing us so that we might grow up to be like Him brings us face to face with our own laziness.</p>

<p>Each of us represent the whole human race; within each of us is the instinct for godhood and the hope for mankind, and within each of us is the original of laziness, the ever-present force of entropy pushing us back to childhood, to the womb and to the swamps from which we have evolved.</p>

<p>Our personal involvement in the fight against evil in the world is one of the ways we grow.</p>

<p>The development of consciousness is the development of awareness in our conscious mind of knowledge along with our unconscious mind, which already possesses that knowledge. It is the process of the conscious mind coming into synchrony with the unconscious.</p>

<p>We are often most in the dark when we are the most certain, and the most enlightened when we are the most confused.</p>

<p>The path of spiritual growth is a path of lifelong learning.</p>

<p>Spiritual power is not simply awareness; it is the capacity to maintain one’s ability to still make decisions with greater and greater awareness. And godlike power is the power to make decisions with total awareness.</p>

<p>Those who have faced their mental illness, accepted total responsibility for it, and made the necessary changes in themselves to overcome it, find themselves not only cured and free from the curses of their childhood and ancestry but also find themselves living in a new and different world. What they once perceived as problems they now perceive as opportunities. What were once loathsome barriers are now welcome challenge. Thoughts previously unwanted become helpful insights; feelings previously disowned become sources of energy and guidance. Occurrences that once seemed to be burdens now seem to be gifts, including the very symptoms from which they have recovered.</p>

<p>Christ’s assertion ‘Many are called, but few are chosen’ I would translate to mean ‘All of us are called by and to grace, but few of us choose to listen to the call.’</p>

<p>To be aware of grace, to personally experience its constant presence, to know one’s nearness to God, is to know and continually experience an inner tranquillity and peace that few possess. On the other hand, the knowledge and awareness brings with it an enormous responsibility. For to experience one’s closeness to God is also to experience the obligation to be God, to be the agent of His power and love. The call to grace is a call to a life of effortful caring, to a life of service and whatever sacrifice seems required. It is a call out of spiritual childhood into adulthood, a call to be a parent unto mankind.</p>

<p>Saint Augustine wrote, ‘Dilige et quod vis fac,’ meaning ‘If you are loving and diligent, you may do whatever you want.’</p>

<p>The awareness of the existence of grace can be of considerable assistance to those who have chosen to travel the difficult path of spiritual growth. For this awareness will facilitate their journey in at least three ways: it will help them to take advantage of grace along the way; it will give them a surer sense of direction; and it will provide encouragement.</p>

<p>For the journey of spiritual growth requires courage and initiative and independence of thought and action. While the words of the prophets and the assistance of grace are available, the journey must be traveled alone. No teacher can carry you there. There are no preset formulas. Rituals are only learning aids, they are not the learning.</p>

<p>No words can be said, no teaching can be taught that will relieve spiritual travellers from the necessity of picking their own ways, working out with effort and anxiety their own paths through the unique circumstances of their own lives toward the identification of their individual selves with God.</p>

<p>Through grace we are helped not to stumble and through grace we know that we are being welcomed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode --- Remove Element]]></title>
    <link href="http://sezina.github.com/blog/2013/11/10/leetcode-remove-element/"/>
    <updated>2013-11-10T08:45:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/11/10/leetcode-remove-element</id>
    <content type="html"><![CDATA[<p>原题：</p>

<pre><code>Given an array and a value, remove all instances of that value in place and return the new length.

The order of elements can be changed. It doesn't matter what you leave beyond the new length.
</code></pre>

<p>中文大意：</p>

<pre><code>给定一个数组和一个数，移除该数组中所有等于这个数的元素并返回删除元素后数组的长度。

数组中元素的顺序可以改变，超出新长度的部分数组的值为什么都可以。
</code></pre>

<p>需要注意的是，数组一直是那个数组，返回的是新数组的长度，也就是说下标小于新长度的数组元素必须是保存了数组删除了特定数后剩余的所有元素。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">removeElement</span><span class="p">(</span><span class="kt">int</span> <span class="n">A</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="kt">int</span> <span class="n">elem</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// IMPORTANT: Please reset any member data you declared, as</span>
</span><span class='line'>        <span class="c1">// the same Solution instance will be reused for each test case.</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">del_count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">elem</span><span class="p">)</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="n">del_count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">A</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="n">del_count</span><span class="p">]</span> <span class="o">=</span> <span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">n</span> <span class="o">-</span> <span class="n">del_count</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode --- Remove Duplicates from Sorted Array]]></title>
    <link href="http://sezina.github.com/blog/2013/11/05/leetcode-remove-duplicates-from-sorted-array/"/>
    <updated>2013-11-05T13:52:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/11/05/leetcode-remove-duplicates-from-sorted-array</id>
    <content type="html"><![CDATA[<p>原题：</p>

<pre><code>Given a sorted array, remove the duplicates in place such that each element appear 
only once and return the new length.

Do not allocate extra space for another array, you must do this in place with constant memory.

For example,

Given input array A = [1,1,2],

Your function should return length = 2, and A is now [1,2].
</code></pre>

<p>中文大意是：</p>

<pre><code>给定一个排好序的数组，移除所有重复的元素，使得所有元素在数组中只出现一次，不允许使用额外的数组。

例如，
输入为 A ＝ [1, 1, 2]
输出是 2 (去重后数组的长度)
</code></pre>

<p>这道题在原数组上做操作，比如给出的例子操作后变为了<code>A = [1, 2, 2]</code>(赋值)或是<code>A = [1, 2, 1]</code>(交换)，只是返回长度为2.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">removeDuplicates</span><span class="p">(</span><span class="kt">int</span> <span class="n">A</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// IMPORTANT: Please reset any member data you declared, as</span>
</span><span class='line'>        <span class="c1">// the same Solution instance will be reused for each test case.</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">new_len</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="n">A</span><span class="p">[</span><span class="n">new_len</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">A</span><span class="p">[</span><span class="n">new_len</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">new_len</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode --- Single Number]]></title>
    <link href="http://sezina.github.com/blog/2013/11/05/leetcode-single-number/"/>
    <updated>2013-11-05T09:25:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/11/05/leetcode-single-number</id>
    <content type="html"><![CDATA[<p>英文原题：</p>

<pre><code>Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. 
Could you implement it without using extra memory?
</code></pre>

<p>中文大意：</p>

<pre><code>给定一个由整数组成的数组，除了一个数之外其他的元素都出现了两次。请找出这个单独的数。

注意：
你的算法的时间复杂度要是线性的。你是否能够不用额外的存储空间解决这个问题？
</code></pre>

<p>第一次看到这题，看完第一句的时候估计不少人瞬间就有了解法然后，然后看完“注意”后，傻眼了。
这道题用到了数在计算机中的表示及位运算。一个数与其自身做异或操作<code>^</code>等于0！利用这个特性，将数组中所有元素进行异或操作，最后的结果就是那个单独的数字。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">singleNumber</span><span class="p">(</span><span class="kt">int</span> <span class="n">A</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// IMPORTANT: Please reset any member data you declared, as</span>
</span><span class='line'>        <span class="c1">// the same Solution instance will be reused for each test case.</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">A</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">^=</span> <span class="n">A</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">A</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode --- Reverse Integer]]></title>
    <link href="http://sezina.github.com/blog/2013/11/05/leetcode-reverse-integer/"/>
    <updated>2013-11-05T09:11:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/11/05/leetcode-reverse-integer</id>
    <content type="html"><![CDATA[<p>原题：</p>

<pre><code>Reverse digits of an integer.

Example1: x = 123, return 321
Example2: x = -123, return -321


Have you thought about this?
Here are some good questions to ask before coding.
Bonus points for you if you have already thought through this!

If the integer's last digit is 0, what should the output be? ie, cases such as 10, 100.

Did you notice that the reversed integer might overflow? Assume the input 
is a 32-bit integer, then the reverse of 1000000003 overflows. How should you handle such cases?

Throw an exception? Good, but what if throwing an exception is not an option? 
You would then have to re-design the function (ie, add an extra parameter).
</code></pre>

<p>中文大意是：</p>

<pre><code>反转给定的整数。

如果考虑了以下问题有加分。
当给定的整数末尾为0的情况。
给定的整数在32位int范围内，但反转后会溢出的情况，如1000000003反转后就会溢出。

抛出异常来处理？好，但如果抛出异常不是我们希望的做法呢？你将要重新设计函数。
</code></pre>

<p>说实在的我没搞懂这道题要考察什么，如果说是那两种意外情况，那只需声明一个long long类型的变量就搞定了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">reverse</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// IMPORTANT: Please reset any member data you declared, as</span>
</span><span class='line'>        <span class="c1">// the same Solution instance will be reused for each test case.</span>
</span><span class='line'>        <span class="kt">long</span> <span class="kt">long</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">while</span> <span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">result</span> <span class="o">=</span> <span class="n">result</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="p">(</span><span class="n">x</span> <span class="o">%</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>            <span class="n">x</span> <span class="o">/=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode --- Add Two Numbers]]></title>
    <link href="http://sezina.github.com/blog/2013/11/01/leetcode-add-two-numbers/"/>
    <updated>2013-11-01T16:46:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/11/01/leetcode-add-two-numbers</id>
    <content type="html"><![CDATA[<p>又来了一道a＋b的题目。</p>

<p>英文原题：</p>

<pre><code>  You are given two linked lists representing two 
non－negative numbers. The digits are stored in reverse
order and each of their nodes contain a single digit.
Add the two numbers and return it as a linked list.

**Input**: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)
**Output**: 7 -&gt; 0 -&gt; 8
</code></pre>

<p>大意是：</p>

<pre><code>给定两个用链表表示的非负数，这两个数为逆序存储（即个位-&gt;十位-&gt;百位这样存储），
数字的每一位用一个节点表示，求和后将和以同样的方式组织并返回。
</code></pre>

<p>这道题是考察基本的指针链表，非常简单。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Definition for singly-linked list.</span>
</span><span class='line'><span class="cm"> * struct ListNode {</span>
</span><span class='line'><span class="cm"> *     int val;</span>
</span><span class='line'><span class="cm"> *     ListNode *next;</span>
</span><span class='line'><span class="cm"> *     ListNode(int x) : val(x), next(NULL) {}</span>
</span><span class='line'><span class="cm"> * };</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">ListNode</span> <span class="o">*</span><span class="n">addTwoNumbers</span><span class="p">(</span><span class="n">ListNode</span> <span class="o">*</span><span class="n">l1</span><span class="p">,</span> <span class="n">ListNode</span> <span class="o">*</span><span class="n">l2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// IMPORTANT: Please reset any member data you declared, as</span>
</span><span class='line'>        <span class="c1">// the same Solution instance will be reused for each test case.</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">carry</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">temp_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">ListNode</span> <span class="o">*</span><span class="n">result_l</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">,</span> <span class="o">*</span><span class="n">last_one</span><span class="p">;</span>
</span><span class='line'>        <span class="k">while</span> <span class="p">(</span><span class="n">l1</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="n">l2</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">temp_sum</span> <span class="o">=</span> <span class="n">l1</span><span class="o">-&gt;</span><span class="n">val</span> <span class="o">+</span> <span class="n">l2</span><span class="o">-&gt;</span><span class="n">val</span> <span class="o">+</span> <span class="n">carry</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">temp_sum</span> <span class="o">&gt;</span> <span class="mi">9</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">carry</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                <span class="n">temp_sum</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">carry</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">result_l</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">result_l</span> <span class="o">=</span> <span class="n">last_one</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ListNode</span><span class="p">(</span><span class="n">temp_sum</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">last_one</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ListNode</span><span class="p">(</span><span class="n">temp_sum</span><span class="p">);</span>
</span><span class='line'>                <span class="n">last_one</span> <span class="o">=</span> <span class="n">last_one</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">l1</span> <span class="o">=</span> <span class="n">l1</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
</span><span class='line'>            <span class="n">l2</span> <span class="o">=</span> <span class="n">l2</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ListNode</span> <span class="o">*</span><span class="n">copy_l</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">l1</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">copy_l</span> <span class="o">=</span> <span class="n">l1</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">copy_l</span> <span class="o">=</span> <span class="n">l2</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">while</span> <span class="p">(</span><span class="n">copy_l</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">temp_sum</span> <span class="o">=</span> <span class="n">copy_l</span><span class="o">-&gt;</span><span class="n">val</span> <span class="o">+</span> <span class="n">carry</span><span class="p">;;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">temp_sum</span> <span class="o">&gt;</span> <span class="mi">9</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">carry</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                <span class="n">temp_sum</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">carry</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">last_one</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ListNode</span><span class="p">(</span><span class="n">temp_sum</span><span class="p">);</span>
</span><span class='line'>            <span class="n">last_one</span> <span class="o">=</span> <span class="n">last_one</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
</span><span class='line'>            <span class="n">copy_l</span> <span class="o">=</span> <span class="n">copy_l</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">carry</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">last_one</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ListNode</span><span class="p">(</span><span class="n">carry</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result_l</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LeetCode --- Two Sum]]></title>
    <link href="http://sezina.github.com/blog/2013/10/31/leetcode-two-sum/"/>
    <updated>2013-10-31T13:04:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/10/31/leetcode-two-sum</id>
    <content type="html"><![CDATA[<p>昨日惊闻LeetCode这东西，听说上面的OJ都是些面试题，又据说是去北美找工作的人都会上去刷刷题，于是带着作为技术人对硅谷无比向往的心情注册了个号开刷，准备在接下来的这一段上算法课时间里把它刷完（一个美好的愿景）。</p>

<p>首先，上一道和所有OJ的第一道a＋b一样的题：</p>

<pre><code>  Given an array of integers, find two numbers such
that they add up to a specific target number.
  The function twoSum should return indices of the
two numbers such that they add up to the target,
where index1 must be less than index2. Please note
that your returned answers (both index1 and index2)
are not zero-based.
  You may assume that each input would have exactly
one solution.

**Input**: numbers={2, 7, 11, 15}, target=9
**Output**: index1=1, index2=2
</code></pre>

<p>中文意思就是：</p>

<pre><code>给定一个数列，找到两个数，它们相加刚好等于给定的target的值。
函数twoSum 应该返回这两个数的下标indx1和index2，且要求index1 &lt; index2，注意，这里的下标不是从0开始的。

**示例输入**：numbers={2, 7, 11, 15}, target=9
**示例输出**：index1=1, index2=2
</code></pre>

<p>看完题意简单吧，就是a＋b的问题。我直接写了两个for循环对数组进行循环判断。下面是我的C++实现。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">twoSum</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">numbers</span><span class="p">,</span> <span class="kt">int</span> <span class="n">target</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// IMPORTANT: Please reset any member data you declared, as</span>
</span><span class='line'>        <span class="c1">// the same Solution instance will be reused for each test case.</span>
</span><span class='line'>        <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">numbers</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">target</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">numbers</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">numbers</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">target</span> <span class="o">&amp;&amp;</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">numbers</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">target</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">result</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>                    <span class="n">result</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>                    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Tomcat on Mac(OS X)]]></title>
    <link href="http://sezina.github.com/blog/2013/07/31/installing-tomcat-on-mac-os-x/"/>
    <updated>2013-07-31T15:13:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/07/31/installing-tomcat-on-mac-os-x</id>
    <content type="html"><![CDATA[<p>Step 1. Download Tomcat7 Binary Distributions from Tomcat homepage.
Step 2. Move the downloaded directory to <code>/usr/local</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mv ~/Downloads/Apache-tomcat-7.0.24 /usr/local
</span></code></pre></td></tr></table></div></figure>


<p>Step 3. Create a symbolic link in <code>/Library</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ln -s /usr/local/Apache-tomcat-7.0.24 /Library/Tomcat
</span></code></pre></td></tr></table></div></figure>


<p>Step 4. Change ownership of <code>/Library/Tomcat</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chown -R &lt;user_name&gt; /Library/Tomcat
</span></code></pre></td></tr></table></div></figure>


<p>Step 5. Make all scripts executable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chmod +x /Library/Tomcat/bin/*.sh
</span></code></pre></td></tr></table></div></figure>


<p>Step 6. Use command <code>/Library/Tomcat/bin/startup.sh</code> to start tomcat, then brower <code>http://localhost:8080</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Phabricator命令行工具Arcanist的基本用法]]></title>
    <link href="http://sezina.github.com/blog/2013/07/16/phabricatorming-ling-xing-gong-ju-arcanistde-ji-ben-yong-fa/"/>
    <updated>2013-07-16T20:49:00+08:00</updated>
    <id>http://sezina.github.com/blog/2013/07/16/phabricatorming-ling-xing-gong-ju-arcanistde-ji-ben-yong-fa</id>
    <content type="html"><![CDATA[<p><a href="http://phabricator.org" title="Phabricator">Pharicator</a>是FB的代码审查工具，现在我所在的团队也使用它来进行代码质量的控制。其提供了一个differential(code review)命令行工具Arcanist(arc)。本文仅从本人的日常使用中总结出Arcanist比较常用的用法做个简单介绍。</p>

<p><strong>环境说明</strong></p>

<ul>
<li>OS: OS X Mountail Lion</li>
<li>SCV: svn</li>
<li>IDE: Eclipse</li>
</ul>


<h2>安装</h2>

<ul>
<li>将Arcanist的源码拷贝到本地</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>somewhere/ <span class="nv">$ </span>git clone git://github.com/facebook/libphutil.git
</span><span class='line'>somewhere/ <span class="nv">$ </span>git clone git://github.com/facebook/arcanist.git
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>将arc的路径加入到系统路径中</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/somewhere/arcanist/bin/
</span></code></pre></td></tr></table></div></figure>


<p>或在系统的profile或是bash(如果用bash)的配置文件的末尾加上这一句。</p>

<ul>
<li>命令行中输入<code>arc</code>看提示确认是否安装成功。</li>
</ul>


<h2>arc配置</h2>

<ul>
<li>arc的全局配置</li>
</ul>


<p>配置arc的默认编辑器，我使用vim</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>arc <span class="nb">set</span>-config editor <span class="s2">&quot;vim&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>配置默认的phabricator的uri，uri为团队的phabricator主页的url</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>arc <span class="nb">set</span>-config default http://phabricator.example.com
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在项目的根目录下建<code>.arcconfig</code>配置文件，文件中至少要填入以下内容</li>
</ul>


<figure class='code'><figcaption><span>.arcconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;project_id&quot;</span> <span class="p">:</span> <span class="s2">&quot;your project name&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;conduit_uri&quot;</span> <span class="p">:</span> <span class="s2">&quot;your phabricator url&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>举个例子：</p>

<figure class='code'><figcaption><span>.arcconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;project_id&quot;</span> <span class="p">:</span> <span class="s2">&quot;HelloWorld&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;conduit_uri&quot;</span> <span class="p">:</span> <span class="s2">&quot;http://phabricator.example.com&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>该配置文件还可以配置静态代码检测引擎(lint)和单元测试引擎。</p>

<ul>
<li>为项目安装证书，用于phabricator的认证。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yourproject/ <span class="nv">$ </span>arc install-certificate
</span></code></pre></td></tr></table></div></figure>


<p>接着按照命令行提示操作就OK了。</p>

<p>弄完这一步，才能真正在项目中使用arc。</p>

<h2>在项目中使用arc</h2>

<ul>
<li><code>arc help [--full | [COMMAND]]</code> 查看帮助文档，接参数<code>--full</code>查看所有命令的详细用法，接具体的命令<code>[COMMAND]</code>如<code>arc help diff</code>可以查看该命令的详细用法。</li>
<li>想phabricator提交review request(Differential).修改完代码后，使用<code>arc diff &lt;path&gt;</code>命令提交review request，该命令会产生一个包含如下内容的文件要求填写：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="s">&lt;&lt;Enter Revision Title&gt;&gt;         </span>
</span><span class='line'><span class="s"> </span>
</span><span class='line'><span class="s">Summary:</span>
</span><span class='line'><span class="s"> </span>
</span><span class='line'><span class="s">Test Plan:</span>
</span><span class='line'><span class="s"> </span>
</span><span class='line'><span class="s">Reviewers:</span>
</span><span class='line'><span class="s"> </span>
</span><span class='line'><span class="s">CC:</span>
</span><span class='line'>
</span><span class='line'><span class="s">Maniphest Tasks:</span>
</span><span class='line'><span class="s"> </span>
</span><span class='line'><span class="s"># NE</span>W DIFFERENTIAL REVISION
</span><span class='line'><span class="c"># Describe the changes in this new revision.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># arc could not identify any existing revision in your working copy.</span>
</span><span class='line'><span class="c"># If you intended to update an existing revision, use:</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#   $ arc diff --update &lt;revision&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>按照提示填写后，保存退出，arc就会自动提交request。<code>Reviewers</code>用逗号隔开，<code>Maniphest Tasks</code>填相关联的phabricator上的<code>task_id</code>，如<code>T100</code>。Test plan暂时没用过，官方文档：<a href="http://www.phabricator.com/docs/phabricator/article/Differential_User_Guide_Test_Plans.html">http://www.phabricator.com/docs/phabricator/article/Differential_User_Guide_Test_Plans.html</a></p>

<p>提交完成后，会产生一个形如<code>http://phabricator.example.com/D24</code>的url，url中的<code>D24</code>是revision_id。</p>

<ul>
<li><code>arc diff --update &lt;revision_id&gt;</code>更新<revision_id>对应的review request。该命令产生一个如下的文件，按提示填写保存退出，arc会提交更新。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Updating D27: hahahah</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Enter a brief description of the changes included in this update.</span>
</span><span class='line'><span class="c"># The first line is used as subject, next lines as comment.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># If you intended to create a new revision, use:</span>
</span><span class='line'><span class="c">#  $ arc diff --create</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>arc commit --revision &lt;revision_id&gt;</code>提交对应<revision_id>提交代码更改，这个命令把svn commit的工作也做掉了，直接提交到代码库。</li>
<li><code>arc todo &lt;description&gt; [option]</code>可以快速给自己在phabricator上创建task，<code>[option]</code>用于把task CC给其他人.</li>
<li><code>arc tasks [options]</code> 查看Maniphest的tasks。</li>
<li><code>arc amend --show</code> 查看当前项目的differentials，<code>arc amend --revision &lt;revision_id&gt; --show</code> 查看指定revision_id的differential。</li>
</ul>


<p><strong>Reference:</strong></p>

<ol>
<li>Arcanist官方文档： <a href="http://www.phabricator.com/docs/phabricator/article/Arcanist_User_Guide.html">http://www.phabricator.com/docs/phabricator/article/Arcanist_User_Guide.html</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Maven(2): pom.xml]]></title>
    <link href="http://sezina.github.com/blog/2012/12/16/using-maven-pom-dot-xml/"/>
    <updated>2012-12-16T16:24:00+08:00</updated>
    <id>http://sezina.github.com/blog/2012/12/16/using-maven-pom-dot-xml</id>
    <content type="html"><![CDATA[<h2>Coordinate(坐标)</h2>

<figure class='code'><figcaption><span>pom.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>  <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>com.foo.bar<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>mvnTest<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>0.0.1-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>jar<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>mvnTest<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;url&gt;</span>http://maven.apache.org<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;properties&gt;</span>
</span><span class='line'>    <span class="nt">&lt;project.build.sourceEncoding&gt;</span>UTF-8<span class="nt">&lt;/project.build.sourceEncoding&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/properties&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>3.8.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;scope&gt;</span>test<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这是Eclipse下创建Maven项目时自动产生的pom文件。Maven通过一组元素来定义当前项目的坐标，它们是：groupId, artifactId, version, packaging, classifier，简单说就是将来该项目在类库中的标识。之前那个项目的坐标如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;groupId&gt;</span>com.foo.bar<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>mvnTest<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>0.0.1-SNAPSHOT<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>jar<span class="nt">&lt;/packaging&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>各元素的意思：</p>

<ul>
<li>groupId: 定义当前Maven项目所属的实际项目。</li>
<li>artifactId: 定义实际项目中的一个Maven项目(模块)，推荐是用实际项目名称作为artifactId的前缀。</li>
<li>version: 项目版本。</li>
<li>packaging: Maven项目的打包方式。</li>
<li>classifier: 帮助定义构建输出的一些附属构件。</li>
</ul>


<h2>依赖配置</h2>

<p>由pom文件中的<code>&lt;dependencies&gt;&lt;/dependencies&gt;</code>负责，下面的每个<code>&lt;dependency&gt;&lt;/dependency&gt;</code>定义一个包依赖，大体的结构如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>...<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>...<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>...<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;type&gt;</span>...<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>  <span class="nt">&lt;scope&gt;</span>...<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>  <span class="nt">&lt;optional&gt;</span>...<span class="nt">&lt;/optional&gt;</span>
</span><span class='line'>  <span class="nt">&lt;exclusions&gt;</span>
</span><span class='line'>    <span class="nt">&lt;exclusion&gt;</span>
</span><span class='line'>    ...
</span><span class='line'>    <span class="nt">&lt;/exclusion&gt;</span>
</span><span class='line'>    ...
</span><span class='line'>  <span class="nt">&lt;/exclusions&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>每个元素的意义如下：</p>

<ul>
<li>groupId, artifactId, version: 这是依赖的基本坐标，是必须的。</li>
<li>type: 对应packaging，默认为jar。</li>
<li>scope: 依赖作用的范围。</li>
<li>optional: 标记依赖是否可用。</li>
<li>exclusions: 用于排除传递性依赖。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Maven(1): Basic]]></title>
    <link href="http://sezina.github.com/blog/2012/12/15/using-maven-basic/"/>
    <updated>2012-12-15T12:18:00+08:00</updated>
    <id>http://sezina.github.com/blog/2012/12/15/using-maven-basic</id>
    <content type="html"><![CDATA[<p>Maven是Apache的一个开源项目，主要用于Java项目的构建、依赖管理和项目信息管理。Maven是个异常强大的自动化构建工具。这篇博文是我在开发过程中使用Maven的学习笔记。</p>

<p>环境：</p>

<ul>
<li>ubuntu 12.04</li>
<li>Eclipse J2EE版本(惭愧只用过Eclipse)</li>
<li>Maven 3.0.0+</li>
</ul>


<h2>Install</h2>

<p>需要安装的有两个东西：一个是Maven本身，一个是IDE插件。</p>

<ol>
<li>从Apache的<a href="http://maven.apache.org">Maven官网</a>下载压缩包，并解压到指定目录.</li>
<li>将Maven添加到系统路径中：export PATH=/path/to/maven/bin:$PATH 。如果使用bash，将该条语句添加到.bashrc中；zsh的添加到.zshrc中。搞定这步就可以在命令行使用Maven了。</li>
<li>命令行虽然方便快捷，但使用Java进行开发的一般还是会用IDE进行开发。有些版本的Eclipse自带了maven插件，不好用，还是找个没有自带的自己装吧。m2e：http://m2eclipse.sonatype.org/sites/m2e，这个是必需的；m2e-extra：http://m2eclipse.sonatype.org/sites/m2e-extras，这个不是必需的。装完后，重启Eclipse，右键点击项目会发现多了Maven选项。</li>
<li>Eclipse里还用进行一下设置，将maven的配置文件换成我们下的maven的配置文件。配置：Maven > installations > Add…。选到maven的目录添加进来就行了。</li>
</ol>


<h2>Usage</h2>

<p>Maven也是遵循“约定由于配置”原则的，所以使用Maven管理项目时，有约定好的目录结构。说实话，有关java的东西的命令行我都不熟，这里只说说Maven常用的几个命令和Eclipse下的使用。Eclipse下使用Maven创建的Java项目目录结构：</p>

<pre><code>/src/main/java        ＃项目主代码目录
/src/test/java        ＃项目测试代码目录
/target               ＃maven的输出目录
pom.xml               ＃maven中最重要的文件，作用如build.xml之于Ant
</code></pre>

<p>一般我们还会创建一个/src/main/resources目录用于存放项目资源，这也是maven约定的资源存放目录。</p>

<h3>Maven常用命令</h3>

<ol>
<li>mvn help:system  该命令会答应出系统的环境变量，有时会非常有用。</li>
<li>mvn clean compile 该命令会清理输出目录/target并编译项目至/target/classes目录。</li>
<li>mvn clean test 清理输出目录->处理主资源->编译主代码->处理测试资源->编译测试代码->测试。</li>
<li>mvn clean package 打包命令，默认打包成jar包。打包后的包名为pom.xml文件定义的artifactId-version.jar。</li>
<li>mvn clean install 安装命令，会将当前项目打包后安装到Maven的本地仓库中，使得可以在其他maven项目中使用该包。</li>
</ol>


<p>Maven的命令还有其他参数可选，根据项目需求查看文档选择所需参数。</p>

<h3>在Eclipse中使用Maven</h3>

<ol>
<li>使用maven创建项目：
<img src="http://sezina.github.com/images/mvn-project-select.png"></li>
<li>选择archetype来生成项目骨架：
<img src="http://sezina.github.com/images/mvn-artifact-select.png"></li>
<li>填写几个关键信息：
<img src="http://sezina.github.com/images/mvn-project-info.png"></li>
<li>点击finish，这样就创建了一个Maven项目。Eclipse已经集成了Maven的几个常用命令，只需使用右键菜单选择即可执行。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello]]></title>
    <link href="http://sezina.github.com/blog/2012/11/24/hello/"/>
    <updated>2012-11-24T00:28:00+08:00</updated>
    <id>http://sezina.github.com/blog/2012/11/24/hello</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;hello world&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is a test.</p>
]]></content>
  </entry>
  
</feed>
